server:
  port: 7111
  servlet:
    context-path: /ad-core-master
  connection-timeout: 20000
  tomcat:
    max-connections: 60
    min-spare-threads: 6
    uri-encoding: UTF-8

spring:
  application:
    name: adx-core-master
  datasource:
    url: jdbc:mysql://49.233.44.47:33061/tianzhuo_ad_data?autoReconnect=true
    username: tianzhuo_admin
    password: Tianzhuo2021
    tomcat:
      max-active: 5
      min-idle: 1
      initial-size: 1
  http:
    encoding:
      charset: utf-8
      enabled: true
      force: true
    messages:
      encoding: UTF-8

  kafka:
    bootstrap-servers: 49.232.64.166:19092,49.232.64.166:19093,49.232.64.166:19094
    listener:
      concurrency: 5 #指定listener 容器中的线程数，用于提高并发量
      ack-mode: manual_immediate #listner负责ack，每调用一次，就立即commit

    producer:
      batch-size: 50000 # 每次批量发送消息的数量
      retries: 3
      client-id: 200
      buffer-memory: 33554432 # 设置生产者内存缓冲区的大小
      key-serializer: org.apache.kafka.common.serialization.StringSerializer # 键的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer # 值的序列化方式
      acks: 1
      # acks=0 ： 生产者在成功写入消息之前不会等待任何来自服务器的响应。
      # acks=1 ： 只要集群的首领节点收到消息，生产者就会收到一个来自服务器成功响应。
      # acks=all ：只有当所有参与复制的节点全部收到消息时，生产者才会收到一个来自服务器的成功响应。

    consumer:
      group-id: group1 # 指定默认消费者group id
      auto-offset-reset: earliest #  最早未被消费的offset
      enable-auto-commit: false #自动提交
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer # 键的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer # 值的反序列化方式
      max-poll-records: 20000

  redis:
#    cluster:
#      max-redirects: 3  # 获取失败 最大重定向次数
#      nodes: 49.232.91.191:6379,81.70.178.200:6379,82.156.126.248:6379,49.232.74.185:6379,49.233.44.47:6379,152.136.194.147:6379
#          password: 0UKPqK2u
#      nodes: 8.140.99.234:7010,8.140.99.234:7011,8.140.99.234:7012,8.140.99.234:7013,8.140.99.234:7014,8.140.99.234:7015
    host: 49.233.44.47
    port: 63791
    password: 0UKPqK2u
    database: 0
    timeout: 1000 #超时时间
    # 配置文件中添加 lettuce.pool 相关配置，则会使用到lettuce连接池
#    lettuce:
#      pool:
#        max-wait: 500 # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
#        max-idle: 10 # 连接池中的最大空闲连接 默认 8
#        min-idle: 5 # 连接池中的最小空闲连接 默认 0
#        max-active: 10 # 连接池最大连接数（使用负值表示没有限制） 默认 8

mybatis:
  mapper-locations: classpath:mapper/*Mapper.xml
  type-aliases-package: com.tianzhuo.adx.vo

logging:
  file:
    max-size: 50MB # 日志文件的最大大小。默认为 20MB
    max-history: 1 # 日志文件要保留的归档的最大天数。默认为 7 天
  path: logs
  level:
    root: info

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8008/eureka/
      instance:
        lease-renewal-interval-in-seconds: 5 # 每隔5秒发送一次心跳
        lease-expiration-duration-in-seconds: 10 # 10秒不发送就过期
        prefer-ip-address: true
        ip-address: 127.0.0.1
        instance-id: ${spring.application.name}:${server.port}


feign:
  hystrix:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"

